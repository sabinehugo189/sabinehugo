@import 'brand.css';

*,
::before,
::after {
  box-sizing: border-box;
}

* {
  margin: 0;
}

*:where(:not(fieldset, progress, meter)) {
  background-origin: border-box;
  background-repeat: no-repeat;
  border-style: solid;
  border-width: 0;
}

:where(html) {
  block-size: 100%;
  font-family: var(--font-sans);
  line-height: var(--font-lineheight-3);
  -webkit-text-size-adjust: none; /* https://kilianvalkhof.com/2022/css-html/your-css-reset-needs-text-size-adjust-probably/ */
}

@media (--motionOK) {
  :where(html) {
    scroll-behavior: smooth;
  }
}

@media (--motionOK) {
  :focus-visible {
    transition: outline-offset 145ms var(--ease-2);
  }

  :where(:not(:active)):focus-visible {
    transition-duration: 0.25s;
  }
}

:where(:not(:active)):focus-visible {
  outline-offset: var(--size-1);
  outline-style: solid;
  outline-width: medium;
}

:where(a:not(.btn)):focus-visible {
  outline-width: thin;
}

:where(body) {
  display: flex;
  flex-direction: column;
  min-block-size: 100%;
  scrollbar-gutter: stable both-edges;
}

:where(h1, h2, h3, h4, h5, h6) {
  font-weight: var(--font-weight-8);
  line-height: var(--font-lineheight-1);
}

:where(h1) {
  font-size: var(--font-size-9);
  line-height: var(--font-lineheight-0);
  max-inline-size: var(--size-header-1);
}

:where(h2) {
  font-size: var(--font-size-6);
  max-inline-size: var(--size-header-2);
}

:where(h3) {
  font-size: var(--font-size-5);
}
:where(h4) {
  font-size: var(--font-size-4);
}
:where(h5) {
  font-size: var(--font-size-3);
}

:where(h3, h4, h5, h6, dt) {
  max-inline-size: var(--size-header-3);
}

:where(p, ul, ol, dl, h6) {
  font-size: var(--font-size-2);
}

:where(a, u, ins, abbr) {
  text-underline-offset: 1px;
}

:where(a[href], area, button, input, label[for], select, summary, textarea, [tabindex]:not([tabindex*='-'])) {
  cursor: pointer;
  touch-action: manipulation;
}

:where(a) {
  margin-block: calc(var(--size-1) * -1);
  margin-inline: calc(var(--size-1) * -1);
  padding-block: var(--size-1);
  padding-inline: var(--size-1);
}

:where(a[href]:link) {
  color: var(--text-1);
  text-decoration-color: var(--link);
  text-decoration-line: underline;
  text-decoration-style: solid;
  text-decoration-thickness: 3px;
  text-underline-position: under;
}

:where(a[href]:visited) {
  color: var(--text-1);
  text-decoration-color: var(--link-visited);
}

:where(a[href]:hover) {
  background-color: var(--link);
  color: white;
  text-decoration: none;
  transition: background-color 0.25s var(--ease-in-out-3),
    color 0.25s var(--ease-in-out-3);
}

:where(a[href]:active) {
  background-color: var(--link-visited);
  color: white;
  text-decoration: none;
  transition: background-color 0.25s var(--ease-in-out-3),
    color 0.25s var(--ease-in-out-3);
}

:where(img, svg, video, canvas, audio, iframe, embed, object) {
  display: block;
}

:where(img, svg, video) {
  block-size: auto;
  max-inline-size: 100%;
}

:where(input, button, textarea, select),
:where(input[type='file'])::-webkit-file-upload-button {
  color: inherit;
  font: inherit;
  font-size: inherit;
  letter-spacing: inherit;
}

:where(input) {
  padding-block: var(--size-1);
  padding-inline: var(--size-2);
}

:where(select) {
  padding-block: var(--size-1);
  padding-inline: var(--size-2);
}

:where(textarea) {
  resize: block;
}

:where(input[type='checkbox'], input[type='radio']) {
  block-size: var(--size-4);
  inline-size: var(--size-4);
}

:where(svg) {
  fill: currentColor;
  stroke: none;
}

:where(svg:not([fill])) {
  fill: none;
  stroke: currentColor;
  stroke-linecap: round;
  stroke-linejoin: round;
  stroke-width: 2;
}

:where(svg:not([width])) {
  inline-size: var(--size-20);
}

:where(code, kbd, samp, pre) {
  font-family: var(--font-mono);
}
:where(:not(pre) > code, kbd) {
  white-space: nowrap;
}

:where(pre) {
  max-inline-size: max-content;
  min-inline-size: 0;
  white-space: pre;
}

:where(:not(pre) > code) {
  background: var(--surface-2);
  border-radius: var(--radius-2);
  padding: var(--size-1) var(--size-2);
}

:where(kbd, var) {
  border-color: var(--surface-4);
  border-radius: var(--radius-2);
  border-width: var(--border-size-1);
  padding: var(--size-1) var(--size-2);
}

:where(mark) {
  border-radius: var(--radius-2);
  padding-inline: var(--size-1);
}

:where(ol, ul) {
  padding-inline-start: var(--size-12);
}
:where(li) {
  padding-inline-start: var(--size-2);
}
:where(li, dd, figcaption) {
  max-inline-size: var(--size-content-2);
}
:where(p) {
  max-inline-size: var(--size-content-3);
}
:where(dt, summary) {
  font-weight: var(--font-weight-7);
}

:where(dt:not(:first-of-type)) {
  margin-block-start: var(--size-5);
}

:where(small) {
  font-size: max(0.5em, var(--font-size-0));
  max-inline-size: var(--size-content-1);
}

:where(hr) {
  background-color: var(--surface-3);
  height: var(--border-size-2);
  margin-block: var(--size-fluid-5);
}

:where(figure) {
  display: grid;
  gap: var(--size-2);
  place-items: center;
}

:where(figure > figcaption) {
  font-size: var(--font-size-1);
}

:where(blockquote, :not(blockquote) > cite) {
  border-inline-start-width: var(--border-size-3);
}

:where(blockquote) {
  display: grid;
  gap: var(--size-4);
  max-inline-size: var(--size-content-2);
  padding-block: var(--size-4);
  padding-inline: var(--size-5);
}

:where(:not(blockquote) > cite) {
  padding-inline-start: var(--size-2);
}

:where(summary) {
  background: var(--surface-3);
  border-radius: var(--radius-2);
  margin: calc(var(--size-2) * -1) calc(var(--size-4) * -1);
  padding: var(--size-2) var(--size-4);
}

:where(details) {
  background: var(--surface-2);
  border-radius: var(--radius-2);
  padding-block: var(--size-2);
  padding-inline: var(--size-4);
}

:where(details[open] > summary) {
  border-end-end-radius: 0;
  border-end-start-radius: 0;
  margin-bottom: var(--size-2);
}

:where(fieldset) {
  border-radius: var(--radius-2);
}

:where(del) {
  background: var(--red-9);
  color: var(--red-2);
}

:where(ins) {
  background: var(--green-9);
  color: var(--green-1);
}

:where(abbr) {
  text-decoration-color: var(--blue-5);
}
