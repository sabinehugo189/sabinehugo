variables:
  FF_USE_FASTZIP: "true"
  ARTIFACT_COMPRESSION_LEVEL: "fast"
  CACHE_COMPRESSION_LEVEL: "fast"
  BRANCH_NAME_MAIN: "main"
  npm_config_cache: "$CI_PROJECT_DIR/.npm"

stages:
  - .pre
  - install
  - lint
# - test
  - build
  - release

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_TAG'
      when: never
    - if: '$CI_MERGE_REQUEST_IID'
    - if: '$CI_COMMIT_BRANCH && $CI_COMMIT_REF_NAME == $BRANCH_NAME_MAIN'

include:
  - project: 'wyn/gitversion'
    file: '/gitversion-ci-cd-plugin-extension.gitlab-ci.yml'

default:
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/node:lts-alpine

Determine Version:
  extends: .gitversion_function
  rules:
    - if: '$CI_COMMIT_BRANCH && $CI_COMMIT_REF_NAME == $BRANCH_NAME_MAIN'

Install:
  stage: install
  script:
    - npm ci --cache .npm --prefer-offline
  cache:
    - key:
        files:
          - package-lock.json
      paths:
        - node_modules
      policy: pull-push
    - key: npm-$CI_JOB_IMAGE
      paths:
        - .npm
      policy: pull-push
  artifacts:
    expire_in: 1 hour
    paths:
      - node_modules

Lint:
  stage: lint
  dependencies:
    - Install
  before_script:
    - echo "${CI_COMMIT_TITLE}\n\n${CI_COMMIT_DESCRIPTION}" | npx commitlint
  script:
    - npm run lint
  cache:
    - key:
        files:
          - package-lock.json
      paths:
        - node_modules
      policy: pull
  rules:
    - if: '$CI_MERGE_REQUEST_IID'

# Test:
#   stage: test
#   dependencies:
#     - Install
#   variables:
#     NODE_ENV: test
#   script:
#     - npm run test
#   cache:
#     - key:
#         files:
#           - package-lock.json
#       paths:
#         - node_modules
#       policy: pull
#     - key: test-$CI_JOB_IMAGE
#       paths:
#         - .testcache
#       policy: pull-push
#   rules:
#     - if: '$CI_MERGE_REQUEST_IID'

Build:
  stage: build
  dependencies:
    - Install
  variables:
    NODE_ENV: production
  script:
    - npm run build
  cache:
    - key:
        files:
          - package-lock.json
      paths:
        - node_modules
      policy: pull
    - key: build-$CI_JOB_IMAGE
      paths:
        - public
      policy: pull-push
  artifacts:
    expire_in: 1 hour
    paths:
      - public
  rules:
    - if: '$CI_COMMIT_BRANCH && $CI_COMMIT_REF_NAME == $BRANCH_NAME_MAIN'

Release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli
  script:
    - >
      release-cli create --name ${PACKAGE_VERSION} --description $CI_COMMIT_REF_NAME-$CI_JOB_ID
      --tag-name ${PACKAGE_VERSION} --ref $CI_COMMIT_SHA
  rules:
    - if: '$CI_COMMIT_BRANCH && $CI_COMMIT_REF_NAME == $BRANCH_NAME_MAIN'
